#!/usr/bin/env node

require('anode-env');

var rebus = require('rebus')(process.env.ANODE_REBUS);
var farm = rebus.value.farm;
process.env.AZURE_STORAGE_ACCOUNT = farm.azureStorage.account.name;
process.env.AZURE_STORAGE_ACCESS_KEY = farm.azureStorage.account.key;
rebus.close();

var reader = require('..').reader;
var colors = require('colors');
var options = require('commander');
var params = require('..').params;

// construction options from params
for(var i=0; i<params.length; i++) {
    var p = params[i];
    var opts = (p.options && p.options.length>0) ? p.options.join('|') : '';
    var type = opts || p.type;
    var type = type ? ' <' + type + '>' : '';
    options.option((p.short ? ('-' + p.short+' ') : '') + '--' + p.name + type, p.desc, p.defaultValue);
}

options
  .option('--wide', 'Show all fields regardless of filters [filtered are hidden by default]')
  .usage('[options]\n\n')
  .parse(process.argv);

colors.setTheme({
  silly  : 'rainbow',
  verbose: 'grey',
  debug  : 'grey',
  trace  : 'grey',
  log    : 'grey',
  info   : 'white',
  warn   : 'yellow',
  error  : 'red'
});

reader(options, function(err, r) {

  if (err) {
    process.stderr.write('error: ' + err.message + "\n");
    process.exit(0);
  }

  r.on('line', function(line, item) {
    if (!options.nocolors) line = colors[item.level](line);
    process.stdout.write(line);
  });

  r.on('error', function(err) {
    process.stderr.write('error: ' + err.message + "\n");
    process.exit(1);
  });

  r.on('end', function() {
    process.exit(0);
  });

});
